{"version":3,"sources":["components/product/product.jsx","store/actions/cart.js","store/actions/types.js","components/products/products.jsx","pages/home/home.jsx","store/actions/products.js","ui/BuySomething/BuySomething.jsx","pages/checkout/checkout.jsx","components/cart/CartItem.jsx","pages/cart/cart.jsx","routes/routes.jsx","ui/navbar/navbar.jsx","App.js","store/reducers/cart.js","store/reducers/products.js","store/reducers/index.js","store/index.js","index.js"],"names":["Product","props","className","src","photo","name","price","onClick","addToCart","item","i","console","log","type","payload","index","connect","state","cart","productlist","products","map","product","key","_id","Home","this","fetchProducts","Component","dispatch","a","axios","get","res","data","error","BuySomething","Checkout","email","address","phone","onChangeHandler","e","setState","target","value","emptycart","post","orders","then","emptyCart","length","orderItem","quantity","placeholder","onChange","CartItem","alt","addItem","removeItem","removeWholeItem","style","color","cursor","Cart","cartItems","sort","b","deleteFromCart","deleteWholeItem","verticalAlign","paddingTop","fontWeight","reduce","accum","to","Routes","path","component","exact","ans","totalPrice","App","initialstate","temp","filter","cartItem","deleteItem","cartReducer","action","productsReducer","rootReducer","combineReducers","middlewares","thunk","store","createStore","compose","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07a70a5b.chunk.js","sourcesContent":["import React from 'react'\nimport \"./product.css\"\nconst Product=props=>{\n    return(\n        <div className=\"Product-wrapper\">\n            <div className=\"Product\">\n                <div className=\"Product-image\">\n                    <img src={props.photo}></img>\n                </div> \n                <div className=\"Product-name\">\n                    {props.name}\n                </div>\n                <div className=\"Product-details\">\n                        <small className=\"price\">${props.price}</small>\n                        <button onClick={props.addToCart} className=\"button\">Add to Cart</button>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Product","import {ADD_TO_CART,REMOVE_WHOLE_ITEM,REMOVE_FROM_CART,EMPTY_CART} from '../actions/types'\n\nexport const addToCart=(item,i)=>{\n    console.log(item)\n    return (\n        {\n            type: ADD_TO_CART,\n            payload:item,\n            index:i\n        }\n    )\n}\n\n\n\nexport const deleteFromCart=(item)=>(\n    {\n        type: REMOVE_FROM_CART,\n        payload:item,\n    }\n)\nexport const deleteWholeItem=(item,i)=>(\n    {\n        type: REMOVE_WHOLE_ITEM,\n        payload:item,\n      \n    }\n)\nexport const emptyCart=()=>(\n    {\n        type:EMPTY_CART,\n        payload:[]\n    }\n)","//action for products reducer to fetch products\nexport const FETCH_PRODUCTS='FETCH_PRODUCTS'\n\n//actions for cart reducer to update cart\nexport const ADD_TO_CART='ADD_TO_CART';\nexport const REMOVE_FROM_CART='REMOVE_FROM_CART'\nexport const REMOVE_WHOLE_ITEM='REMOVE_WHOLE_ITEM'\nexport const EMPTY_CART='EMPTY_CART'","//connected component as addtocart action will be dispatched through here\nimport React from 'react'\nimport \"./products.css\"\n//importing product component\nimport Product from '../product/product'\n\nimport PropTypes from 'prop-types'\nimport {addToCart} from '../../store/actions/cart'\nimport { connect } from 'react-redux'\nconst Products=props=>{\n    const productlist= props.products.map((product,i)=>{\n        return <Product\n        key={product._id}\n        {...product}\n        addToCart={()=>props.addToCart(product,i)}/>\n    })\n    \n    return(\n        <div>\n            <h1>Happy shopping!!</h1>\n            <div className=\"Products-container\">\n                <div className=\"Products-wrapper\">\n                {productlist}\n                </div>\n                \n            \n        </div>\n        </div>\n        \n    )\n}\n\nProducts.propTypes={\n    products:PropTypes.array.isRequired,\n    addToCart:PropTypes.func.isRequired\n}\nconst mapStateToProps = state => ({\n    cart: state.cart\n  });\nexport default connect(mapStateToProps,{addToCart})(Products)","/*connected component -as it dispatches action to hydrated product state\nand acces those products*/\n//note:products is an array\nimport React,{Component} from 'react'\n\n//importing action to connect to the component\nimport { fetchProducts } from '../../store/actions/products'\n//importing the Products component\nimport Products from '../../components/products/products'\n\nimport {connect} from 'react-redux'\n\nclass Home extends Component{\n   componentDidMount(){\n      this.props.fetchProducts();\n    }\n\n    render(){\n        return(\n            <main>\n                <Products products={this.props.products}/>\n            </main>\n            \n        )\n    }\n}\n\nconst mapStateToProps=(state)=>({\n    products:state.products,\n}\n)\n\n//exporting connected/subscribed component\nexport default connect(mapStateToProps,{fetchProducts})(Home);\n\n\n","import {FETCH_PRODUCTS} from '../actions/types'\nimport axios from 'axios'\nexport const fetchProducts=()=> async dispatch=>{\n    try {\n        const res= await axios.get(\"/api/products \");\n        console.log(res.data.products)\n        dispatch({\n            type:FETCH_PRODUCTS,\n            payload:res.data.products\n        })\n    } catch (error) {   \n        console.error(error)   \n    }\n    \n}","import React from 'react'\nconst BuySomething=props=>{\n    return(\n        <div>\n            <h1 className=\"recieved\">All previous orders recieved</h1>\n            <h2 className=\"back\">\n            You have nothing in cart.\n            </h2>\n           \n        </div>\n    )\n}\nexport default BuySomething","import React,{Component} from 'react'\nimport axios from \"axios\"\nimport {connect} from 'react-redux'\nimport {emptyCart} from '../../store/actions/cart'\nimport BuySomething from '../../ui/BuySomething/BuySomething'\nimport Modal from 'react-modal'\nimport \"./checkout.css\"\n\nconst customStyles = {\n    content: {\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\"\n    }\n  };\nclass Checkout extends Component{\n   \n    componentDidMount(){\n        console.log(this.props.cart)\n    }\n    state={\n        name:\"you\",\n        email:\"\",\n        address:\"\",\n        phone:\"\"\n    }\n\n    onChangeHandler=(e)=>{\n        this.setState({[e.target.name]:e.target.value})\n    }\n\n    \n\n    emptycart=(e)=>{\n        axios.post('/api/orders',{...this.state, orders:this.props.cart}).then((res)=>console.log(res))\n        console.log(this.state)\n        this.props.emptyCart();\n       \n    }\n   \n   \n \n    render(){\n\n        if(!this.props.cart.length) return <BuySomething />\n\n        const orders=this.props.cart.map((orderItem)=>{\n            return (\n             \n                       \n                            <tr>\n                                 <td>{orderItem.name}</td>\n                                 <td>{orderItem.price}</td>\n                                <td>{orderItem.quantity}</td>\n                            </tr>\n               \n              \n            )\n        })\n        return(\n            <div>\n                <div>\n                <h1 className=\"Checkout-Title\">Your Order</h1>\n                    <table className=\"table\">\n                    <thead>\n                            <tr>\n                                <td>Name</td>\n                                <td>Price</td>\n                                <td>quantity</td>\n                            </tr>\n                            \n\n\n                        </thead>\n                        <tbody>\n                            {orders}\n                        </tbody>\n                    </table>\n                    \n                </div>\n               <form className=\"Checkout-Wrapper\">\n               <h1 className=\"Checkout-Title\">Checkout</h1>\n                  <input type=\"text\" className=\"Checkout-Input\" name=\"name\" placeholder=\"Enter Name\" onChange={this.onChangeHandler}/>\n                  <input type=\"text\" className=\"Checkout-Input\" name=\"email\" placeholder=\"Enter Email\" onChange={this.onChangeHandler}/>\n                  <input type=\"text\" className=\"Checkout-Input\" name=\"address\" placeholder=\"Enter Address\" onChange={this.onChangeHandler}/>\n                  <input type=\"text\" className=\"Checkout-Input\" name=\"phone\" placeholder=\"Enter Contact no.\" onChange={this.onChangeHandler}/>\n                  <button className=\"button\" onClick={this.emptycart} >Buy Now</button>\n               </form>\n               \n                \n              \n            </div>\n           \n        )\n    }\n}\nconst mapStateToProps=state=>(\n    {\n        cart:state.cart\n    }\n)\n    \n\n\nexport default connect(mapStateToProps,{emptyCart})(Checkout)\n\n","import React,{Fragment} from 'react'\nimport \"./cart.css\"\nimport PropTypes from 'prop-types'\n\n\nconst CartItem=props=>{\n    return(\n        <Fragment>\n            <tr>\n                <td>\n                    {\" \"}\n                     <image className=\"Cart-Item-Photo\" src={props.photo}  alt={props.name}></image>\n                     {\" \"}\n                </td>\n                <td>{props.name}</td>\n                <td>\n                    <button  onClick={props.addItem} className=\"Quantity-Button\">\n                        +\n                    </button>\n                    <span>\n                    {props.quantity}\n                    </span>\n                    <button  onClick={props.removeItem} className=\"Quantity-Button\"> \n                        -\n                    </button>\n                    </td>\n                <td>{props.price}</td>\n                <td className=\"fa fa-times\" onClick={props.removeWholeItem} style={{ color: 'red', cursor: 'pointer' }}> DELETE :(</td>\n            </tr>\n        </Fragment>\n    )\n}\n\nCartItem.propTypes={\n    name: PropTypes.string.isRequired,\n    photo: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    quantity: PropTypes.number.isRequired,\n    addItem: PropTypes.func.isRequired,\n    removeItem: PropTypes.func.isRequired\n}\n\n\nexport default CartItem","//connected component giving action to its child cardItem and accessing cartState\n\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {addToCart,deleteFromCart,deleteWholeItem} from '../../store/actions/cart'\n\nimport \"./cart.css\"\nimport { Link } from 'react-router-dom'\nimport BuySomething from '../../ui/BuySomething/BuySomething'\nimport CartItem from '../../components/cart/CartItem'\n\nimport {connect} from 'react-redux'\n\n//To sort the products array by ID\nconst sort=item=>{\n    return item.sort((a,b)=>a._id<b._id)\n}\n\n//To calculate total price\nconst totalPrice=cart=>( cart.reduce((accum,product)=>(accum+(product.price*product.quantity)),0));\n\nclass Cart extends Component{\n \n    render(){\n        \n        if(!this.props.cart.length) return <BuySomething />\n        const cartItems=sort(this.props.cart).map((item,i)=>(\n            <CartItem \n            key={i}\n            {...item}\n            addItem={()=>this.props.addToCart(item,i)}\n            removeItem={()=>this.props.deleteFromCart(item)}\n            removeWholeItem={()=>this.props.deleteWholeItem(item)}\n            />\n        ))\n\n\n        // if(!cartItems.length) return <BuySomething/>\n\n        return(\n            <div>\n                <h1 className=\"My-Cart-Title\">My Cart</h1>\n                \n                <div className=\"Cart-Products-Wrapper\">\n                    <table className=\"Cart-Table\">\n                        <thead>\n                            <tr>\n                                <th>Photo</th>\n                                <th>Name</th>\n                                <th>Quantity</th>\n                                <th>Price</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {cartItems}\n                            <tr>\n                            <td\n                                style={{\n                                    verticalAlign: 0,\n                                    paddingTop: \"1rem\",\n                                    fontWeight: \"bold\"\n                                }}\n                            >\n                            Total\n                            </td>\n                                <td />\n                                <td />\n                                <td>\n                                     <p className=\"Total-Price\" >${totalPrice(this.props.cart)}</p>\n                                     <Link to=\"/checkout\"\n                                     className=\"Checkout-Button-Text\">\n                                     \n                                         <div  className=\"Checkout-Button\">\n                                             Checkout\n                                         </div>\n                                     </Link>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nCart.propTypes={\n    addToCart:PropTypes.func.isRequired,\n    deleteFromCart:PropTypes.func.isRequired,\n   \n}\nconst mapStateToProps=state=>({\n    cart:state.cart\n\n   \n})\n\nexport default connect(mapStateToProps,{addToCart,deleteFromCart,deleteWholeItem})(Cart)\n","//Parent component for connected components\nimport React from 'react';\nimport {Route,Switch} from 'react-router-dom'\nimport Home from '../pages/home/home';\nimport Checkout from '../pages/checkout/checkout'\nimport Cart from '../pages/cart/cart'\n\nconst Routes=(props)=>{\n    return(\n        <Switch>\n            <Route path=\"/\" component={Home} exact/>\n             <Route path=\"/cart\" component={Cart} exact/>\n            <Route path=\"/checkout\" component={Checkout}/>\n        </Switch>\n    )\n}\nexport default Routes","//connected component as it accesses cart to decribe cart in navbar\nimport React from 'react'\nimport \"./navbar.css\"\nimport {connect} from 'react-redux'\n\nimport {Link} from 'react-router-dom'\n\nconst totalPrice = cart => \n  {\n        let ans= cart.reduce(\n            (accum, product) => accum + (product.price * product.quantity),\n            0\n          );\n        console.log('ans',ans)\n        return ans\n            \n  };\nconst Navbar=props=>(\n    <nav className=\"NavBar-Wrapper\">\n        <div>\n            <Link to=\"/\"><p className=\"shop\">Shop</p></Link>\n        </div>\n        <Link to=\"/cart\">\n            <div className=\"Cart-Info\">\n                <span className=\"Cart-Item-Counter\">{props.cart.length}</span>\n                <i className=\"fa fa-shopping-bag\"></i>\n                <p>Cart: ${totalPrice(props.cart)}</p>\n            </div>\n        </Link>\n    </nav>\n)\nconst mapStateToProps=state=>(\n    {\n        cart:state.cart\n    }\n)\nexport default connect(mapStateToProps,null)(Navbar)","import React,{Component} from 'react';\nimport Routes from './routes/routes'\nimport Navbar from './ui/navbar/navbar'\nimport './App.css';\n\nclass App extends Component{\n    render(){\n        return(\n            <div className=\"App\">\n                <Navbar />\n                <Routes />\n            </div>\n        )\n    }\n}\nexport default App;\n","/*This reducer function manages the state of cart.\nAnd all actions for updating cart state to reducer are dispatched to this reducer. */\n\n\nimport { ADD_TO_CART, REMOVE_FROM_CART, REMOVE_WHOLE_ITEM,EMPTY_CART} from '../actions/types'\n\nconst initialstate=[]\n\n\n//retuns state with the new item added\nconst addItem=(cart,item)=>{\n    console.log('adding item..')\n    const temp=[...cart]\n    for(let i=0;i<cart.length;i++){\n        if(cart[i]._id===item._id){\n            //if that item exits increment its quantity by 1;\n            temp[i].quantity+=1;\n            console.log(cart)\n            return temp;\n        }\n    }\n    //if that item doesnt exits,set quantity to 1;\n    \n    return [...cart,{...item,quantity:1}];\n}\n\n\n//returns state with the given item deleted\nconst removeItem=(cart,item)=>{\n    return (cart.filter((cartItem)=>{\n        if(cartItem._id!==item._id) return true;\n        if(cartItem.quantity>1){\n            cartItem.quantity-=1;\n            return true;\n        }\n        return false;\n    }))\n    \n}\n\nconst deleteItem=(cart,item)=>{\n    return cart.filter((cartItem)=>(\n        cartItem._id!==item._id\n    )\n    )\n}\nconst  cartReducer=(state=initialstate,action)=>{\n    switch(action.type){\n        case ADD_TO_CART:\n            return addItem(state,action.payload);\n        case REMOVE_FROM_CART:\n            return removeItem(state,action.payload);\n        case REMOVE_WHOLE_ITEM:\n            return deleteItem(state,action.payload);\n        case EMPTY_CART:\n            console.log('here')\n            return action.payload\n        default:\n            return state;\n    }\n}\n\nexport default cartReducer\n","/*This reducer function manages the state of products on main page.\nAnd all actions for updating the  state to fetched products are dispatched to this reducer. */\n\nimport { FETCH_PRODUCTS } from '../actions/types'\n\nconst initialstate=[];\nconst  productsReducer=(state=initialstate,action)=>{\n    switch(action.type){\n        case FETCH_PRODUCTS:\n            console.log(action.payload)\n            return action.payload;\n        default:\n            return state;\n\n    }\n}\n\nexport default  productsReducer;","//importing both reducers\nimport cartReducer from './cart'\nimport productsReducer from './products'\n\nimport { combineReducers } from 'redux'\n\nconst  rootReducer=combineReducers(\n    {\n        cart:cartReducer,\n        products:productsReducer\n        \n    }\n)\n\nexport default rootReducer","//importing rootreducer\nimport rootReducer from './reducers'\nimport thunk from 'redux-thunk'\n\n//importing from redux to create store\nimport {createStore, applyMiddleware, compose } from 'redux'\n\nconst middlewares=[thunk]\nconst initialState={};\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middlewares))\n  );\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\n//importing store\nimport store from './store'\n\n//react-redux to get Provider wrapper\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n          <App />   \n    </BrowserRouter>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}