{"version":3,"sources":["../node_modules/express/lib sync","ui/navbar/navbar.jsx","store/actions/cart.js","store/actions/types.js","ui/BuySomething/BuySomething.jsx","pages/checkout/checkout.jsx","components/cart/CartItem.jsx","pages/cart/cart.jsx","pages/auth/login.jsx","store/actions/creden.js","components/product/product.jsx","components/products/products.jsx","pages/home/home.jsx","store/actions/products.js","App.js","store/reducers/cart.js","store/reducers/products.js","store/reducers/cred.js","store/reducers/index.js","store/index.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","connect","state","cart","props","className","to","length","ans","reduce","accum","product","price","quantity","console","log","totalPrice","addToCart","item","i","type","payload","index","BuySomething","Checkout","emptycart","cred","orders","axios","post","headers","localStorage","getItem","_doc","emptyCart","this","map","orderItem","name","onClick","Component","CartItem","src","photo","alt","addItem","removeItem","removeWholeItem","style","color","cursor","Cart","cartItems","sort","a","b","_id","key","deleteFromCart","deleteWholeItem","verticalAlign","paddingTop","fontWeight","login","data","first","dispatch","res","setItem","accessToken","history","useHistory","useState","setName","email","setEmail","address","setAddress","phone","setPhone","password","setPassword","onChangeName","target","value","onChangeAddress","onChangePassword","onsubmitSignup","preventDefault","push","onsubmitLogin","placeholder","onChange","Product","productlist","products","Home","fetchProducts","at","get","error","App","loading","setLoading","useEffect","method","url","fetchme","path","component","Login","exact","initialstate","temp","filter","cartItem","deleteItem","cartReducer","action","productsReducer","initialState","credReducer","rootReducer","combineReducers","middlewares","thunk","store","createStore","compose","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27dd153a.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 313;","//connected component as it accesses cart to decribe cart in navbar\nimport React from 'react'\nimport \"./navbar.css\"\nimport {connect} from 'react-redux'\n\nimport {Link} from 'react-router-dom'\n\nconst totalPrice = cart => \n  {\n        let ans= cart.reduce(\n            (accum, product) => accum + (product.price * product.quantity),\n            0\n          );\n        console.log('ans',ans)\n        return ans\n            \n  };\nconst Navbar=props=>(\n    <nav className=\"NavBar-Wrapper\">\n        <div>\n            <Link to=\"/\"><p className=\"shop\">Shop</p></Link>\n        </div>\n        <Link to=\"/cart\">\n            <div className=\"Cart-Info\">\n                <span className=\"Cart-Item-Counter\">{props.cart.length}</span>\n                <i className=\"fa fa-shopping-bag\"></i>\n                <p>Cart: ${totalPrice(props.cart)}</p>\n            </div>\n        </Link>\n    </nav>\n)\nconst mapStateToProps=state=>(\n    {\n        cart:state.cart\n    }\n)\nexport default connect(mapStateToProps,null)(Navbar)","import {ADD_TO_CART,REMOVE_WHOLE_ITEM,REMOVE_FROM_CART,EMPTY_CART} from '../actions/types'\n\nexport const addToCart=(item,i)=>{\n    console.log(item)\n    return (\n        {\n            type: ADD_TO_CART,\n            payload:item,\n            index:i\n        }\n    )\n}\n\n\n\nexport const deleteFromCart=(item)=>(\n    {\n        type: REMOVE_FROM_CART,\n        payload:item,\n    }\n)\nexport const deleteWholeItem=(item,i)=>(\n    {\n        type: REMOVE_WHOLE_ITEM,\n        payload:item,\n      \n    }\n)\nexport const emptyCart=()=>(\n    {\n        type:EMPTY_CART,\n        payload:[]\n    }\n)","//action for products reducer to fetch products\nexport const FETCH_PRODUCTS='FETCH_PRODUCTS'\n\n//actions for cart reducer to update cart\nexport const ADD_TO_CART='ADD_TO_CART';\nexport const REMOVE_FROM_CART='REMOVE_FROM_CART'\nexport const REMOVE_WHOLE_ITEM='REMOVE_WHOLE_ITEM'\nexport const EMPTY_CART='EMPTY_CART'\n\n//action to store the user credentials\nexport const STORE_CRED='STORE_CRED'","import React from 'react'\nconst BuySomething=props=>{\n    return(\n        <div>\n            <h1 className=\"recieved\">All previous orders recieved</h1>\n            <h2 className=\"back\">\n            You have nothing in cart.\n            </h2>\n           \n        </div>\n    )\n}\nexport default BuySomething","import React,{Component} from 'react'\nimport axios from \"axios\"\nimport {connect} from 'react-redux'\nimport {emptyCart} from '../../store/actions/cart'\nimport BuySomething from '../../ui/BuySomething/BuySomething'\nimport \"./checkout.css\" \n\nconst customStyles = {\n    content: {\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\"\n    }\n  };\nclass Checkout extends Component{\n   \n    componentDidMount(){\n        console.log(this.props.cart)\n    }\n\n    \n  \n    emptycart=(e)=>{\n        \n        //for first time users\n        if(this.props.cred.orders){\n            // console.log(localStorage.getItem(\"jwt\"));\n            axios.post('/api/orders',{...this.props.cred,orders:[...this.props.cred.orders,...this.props.cart]},{headers:{\n                \"x-token\":localStorage.getItem(\"jwt\")\n            }})\n        }   \n        //for users fetched from mongodb\n        else{\n            axios.post('/api/orders',{...this.props.cred._doc.orders,orders:[...this.props.cred._doc.orders,...this.props.cart]},{headers:{\n                \"x-token\":localStorage.getItem(\"jwt\")\n            }})\n        }\n        \n        this.props.emptyCart();\n       \n    }\n    \n   \n    \n    render(){\n\n        if(!this.props.cart.length) return <BuySomething />\n\n        const orders=this.props.cart.map((orderItem)=>{\n            return (\n             \n                       \n                            <tr>\n                                 <td>{orderItem.name}</td>\n                                 <td>{orderItem.price}</td>\n                                <td>{orderItem.quantity}</td>\n                            </tr>\n               \n              \n            )\n        })\n        return(\n            <div>\n                <div>\n                <h1 className=\"Checkout-Title\">Your Order</h1>\n                    <table className=\"table\">\n                    <thead>\n                            <tr>\n                                <td>Name</td>\n                                <td>Price</td>\n                                <td>quantity</td>\n                            </tr>\n                            \n\n\n                        </thead>\n                        <tbody>\n                            {orders}\n                        </tbody>\n                    </table>\n                    \n                </div>\n           \n               \n               <button className=\"button\" onClick={this.emptycart} >Buy Now</button>\n              \n            </div>\n           \n        )\n    }\n}\nconst mapStateToProps=state=>(\n    {\n        cart:state.cart,\n        cred:state.cred\n    }\n)\n    \n\n\nexport default connect(mapStateToProps,{emptyCart})(Checkout)\n\n","import React,{Fragment} from 'react'\nimport \"./cart.css\"\nimport PropTypes from 'prop-types'\n\n\nconst CartItem=props=>{\n    return(\n        <Fragment>\n            <tr>\n                <td>\n                    {\" \"}\n                     <image className=\"Cart-Item-Photo\" src={props.photo}  alt={props.name}></image>\n                     {\" \"}\n                </td>\n                <td>{props.name}</td>\n                <td>\n                    <button  onClick={props.addItem} className=\"Quantity-Button\">\n                        +\n                    </button>\n                    <span>\n                    {props.quantity}\n                    </span>\n                    <button  onClick={props.removeItem} className=\"Quantity-Button\"> \n                        -\n                    </button>\n                    </td>\n                <td>{props.price}</td>\n                <td className=\"fa fa-times\" onClick={props.removeWholeItem} style={{ color: 'red', cursor: 'pointer' }}> DELETE :(</td>\n            </tr>\n        </Fragment>\n    )\n}\n\nCartItem.propTypes={\n    name: PropTypes.string.isRequired,\n    photo: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    quantity: PropTypes.number.isRequired,\n    addItem: PropTypes.func.isRequired,\n    removeItem: PropTypes.func.isRequired\n}\n\n\nexport default CartItem","//connected component giving action to its child cardItem and accessing cartState\n\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {addToCart,deleteFromCart,deleteWholeItem} from '../../store/actions/cart'\n\nimport \"./cart.css\"\nimport { Link } from 'react-router-dom'\nimport BuySomething from '../../ui/BuySomething/BuySomething'\nimport CartItem from '../../components/cart/CartItem'\n\nimport {connect} from 'react-redux'\n\n//To sort the products array by ID\nconst sort=item=>{\n    return item.sort((a,b)=>a._id<b._id)\n}\n\n//To calculate total price\nconst totalPrice=cart=>( cart.reduce((accum,product)=>(accum+(product.price*product.quantity)),0));\n\nclass Cart extends Component{\n \n    render(){\n        \n        if(!this.props.cart.length) return <BuySomething />\n        const cartItems=sort(this.props.cart).map((item,i)=>(\n            <CartItem \n            key={i}\n            {...item}\n            addItem={()=>this.props.addToCart(item,i)}\n            removeItem={()=>this.props.deleteFromCart(item)}\n            removeWholeItem={()=>this.props.deleteWholeItem(item)}\n            />\n        ))\n\n\n        // if(!cartItems.length) return <BuySomething/>\n\n        return(\n            <div>\n                <h1 className=\"My-Cart-Title\">My Cart</h1>\n                \n                <div className=\"Cart-Products-Wrapper\">\n                    <table className=\"Cart-Table\">\n                        <thead>\n                            <tr>\n                                <th>Photo</th>\n                                <th>Name</th>\n                                <th>Quantity</th>\n                                <th>Price</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {cartItems}\n                            <tr>\n                            <td\n                                style={{\n                                    verticalAlign: 0,\n                                    paddingTop: \"1rem\",\n                                    fontWeight: \"bold\"\n                                }}\n                            >\n                            Total\n                            </td>\n                                <td />\n                                <td />\n                                <td>\n                                     <p className=\"Total-Price\" >${totalPrice(this.props.cart)}</p>\n                                     <Link to=\"/checkout\"\n                                     className=\"Checkout-Button-Text\">\n                                     \n                                         <div  className=\"Checkout-Button\">\n                                             Checkout\n                                         </div>\n                                     </Link>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nCart.propTypes={\n    addToCart:PropTypes.func.isRequired,\n    deleteFromCart:PropTypes.func.isRequired,\n   \n}\nconst mapStateToProps=state=>({\n    cart:state.cart\n\n   \n})\n\nexport default connect(mapStateToProps,{addToCart,deleteFromCart,deleteWholeItem})(Cart)\n","import React from 'react'\nimport { useState } from 'react'\nimport {login} from '../../store/actions/creden'\nimport {useHistory} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport \"./login.css\"\n\nconst Login =props=>{\n    let history=useHistory()\n    const [name,setName]=useState(null)\n    const [email,setEmail]=useState(null)\n    const [address,setAddress]=useState(null)\n    const [phone,setPhone]=useState(null)\n    const [password,setPassword]=useState(null)\n \n    const onChangeName=(e)=>{\n        console.log('changed')\n        setName(e.target.value)\n    }\n\n    const onChangeEmail=(e)=>{\n        setEmail(e.target.value)\n    }\n\n    const onChangeAddress=(e)=>{\n        setAddress(e.target.value)\n    }\n\n    const onChangePhone=(e)=>{\n        setPhone(e.target.value)\n    }\n\n    const onChangePassword=(e)=>{\n        setPassword(e.target.value)\n    }\n\n    const onsubmitSignup= async (e)=>{\n       e.preventDefault()\n       const cred={\n        'name': name,\n        'email': email,\n        'address': address,\n        'phone': phone,\n        'password': password\n    }\n    console.log(cred)\n     await props.login(cred,true)\n     history.push('/')      \n     \n    }\n\n    const onsubmitLogin=async (e)=>{\n        e.preventDefault()\n       const cred={\n        'name':name,\n        'password':password\n       } \n       console.log(cred)\n       await props.login(cred,false)\n       history.push('/')\n    }\n\n        return(\n            <div className=\"container\">\n                <div className=\"login\">\n                    <form>\n                        <input  placeholder=\"Enter Name\" type=\"text\" onChange={onChangeName}></input>\n                        <input  placeholder=\"Enter password\" type=\"password\" onChange={onChangePassword}></input>\n                        <button className=\"button\" onClick={onsubmitLogin}>Login</button>\n                    </form>\n                </div>\n                <div className=\"signup\">\n                <br></br>\n                <form>\n                <input placeholder=\"Enter name\" type=\"text\" onChange={onChangeName}></input>\n                <input placeholder=\"Enter Email-id\" type=\"text\" onChange={onChangeEmail}></input>\n                <input placeholder=\"Enter Address\" type=\"text\"  onChange={()=>onChangeAddress}></input>\n                <input placeholder=\"Enter phone number\" type=\"text\"  onChange={onChangePhone}></input>\n                <input placeholder=\"Enter Password\" type=\"password\"  onChange={onChangePassword}></input>\n                <button className=\"button\" onClick={onsubmitSignup}>Signup</button>\n                </form>\n                </div>\n            </div>\n        )\n    \n}\n\n\n\nexport default connect(null,{login})(Login)\n","import {STORE_CRED} from '../actions/types'\nimport axios from 'axios'\nexport const login=(data,first)=>async (dispatch)=>{\n    \n    if(first){\n        try {\n            const res=await axios.post(\"/auth/signup\",data);\n            localStorage.setItem(\"jwt\",res.data.accessToken);\n            dispatch({\n                type:STORE_CRED,\n                payload:res\n            })\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    else{\n        try {\n            const res=await axios.post(\"/auth/login\",data); \n            localStorage.setItem(\"jwt\",res.data.accessToken);\n            dispatch({\n                type:STORE_CRED,\n                payload:res\n            })\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    \n}\n// export const login=data=>{\n//     console.log(data)\n// }","import React from 'react'\nimport \"./product.css\"\nconst Product=props=>{\n    return(\n        <div className=\"Product-wrapper\">\n            <div className=\"Product\">\n                <div className=\"Product-image\">\n                    <img src={props.photo}></img>\n                </div> \n                <div className=\"Product-name\">\n                    {props.name}\n                </div>\n                <div className=\"Product-details\">\n                        <small className=\"price\">${props.price}</small>\n                        <button onClick={props.addToCart} className=\"button\">Add to Cart</button>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Product","//connected component as addtocart action will be dispatched through here\nimport React from 'react'\nimport \"./products.css\"\n//importing product component\nimport Product from '../product/product'\n\nimport PropTypes from 'prop-types'\nimport {addToCart} from '../../store/actions/cart'\nimport { connect } from 'react-redux'\nconst Products=props=>{\n    const productlist= props.products.map((product,i)=>{\n        return <Product\n        key={product._id}\n        {...product}\n        addToCart={()=>props.addToCart(product,i)}/>\n    })\n    \n    return(\n        <div>\n            <h1>Happy shopping!!</h1>\n            <div className=\"Products-container\">\n                <div className=\"Products-wrapper\">\n                {productlist}\n                </div>\n                \n            \n        </div>\n        </div>\n        \n    )\n}\n\nProducts.propTypes={\n    products:PropTypes.array.isRequired,\n    addToCart:PropTypes.func.isRequired\n}\nconst mapStateToProps = state => ({\n    cart: state.cart\n  });\nexport default connect(mapStateToProps,{addToCart})(Products)","/*connected component -as it dispatches action to hydrated product state\nand acces those products*/\n//note:products is an array\nimport React,{Component} from 'react'\n\n//importing action to connect to the component\nimport { fetchProducts } from '../../store/actions/products'\n//importing the Products component\nimport Products from '../../components/products/products'\n\nimport {connect} from 'react-redux'\n\nclass Home extends Component{\n    componentDidMount(){\n        let cred=this.props.cred\n        console.log(cred.accessToken)\n       this.props.fetchProducts(cred.accessToken);\n     }\n \n     render(){\n         return(\n             <main>\n                 <Products products={this.props.products}/>\n             </main>\n             \n         )\n     }\n }\n \n\nconst mapStateToProps=(state)=>({\n    products:state.products,\n    cred:state.cred\n}\n)\n\n//exporting connected/subscribed component\nexport default connect(mapStateToProps,{fetchProducts})(Home);\n\n\n","import {FETCH_PRODUCTS} from '../actions/types'\nimport axios from 'axios'\nexport const fetchProducts=(at)=> async dispatch=>{\n    try {\n        console.log(at)\n        const res= await axios.get(\"/api/products\",{\"headers\":{\n            \"X-token\":at\n        }});\n        console.log(res.data.products)\n        dispatch({\n            type:FETCH_PRODUCTS,\n            payload:res.data.products\n        })\n    } catch (error) {   \n        console.error(error)   \n    }\n    \n}","import React,{useEffect, useState} from 'react';\nimport {Route,Switch,useHistory} from 'react-router-dom'\n// import Routes from './routes/routes'\nimport Navbar from '../src/ui/navbar/navbar'\nimport Checkout from './pages/checkout/checkout'\nimport Cart from './pages/cart/cart'\nimport Login from './pages/auth/login'\nimport Home from './pages/home/home'\nimport './App.css';\nimport e from 'express';\nimport axios from 'axios'\n\n\n\nconst App=(props)=>{\n    const history=useHistory();\n    const [loading,setLoading]=useState(true);\n    useEffect(()=>{\n        async function fetchme(){\n           \n            try{\n                await axios({\n                    method:\"get\",\n                    url: \"/check\",\n                    headers:{\n                        \"x-token\":localStorage.getItem(\"jwt\")\n                    }\n                });\n            }catch(e){\n                history.push(\"/login\");\n                setLoading(false);\n            }\n        }\n        fetchme();\n    })\n    console.log(\"here in as\")\n    if(loading) return null;\n    return(\n    <div className=\"App\">\n         <Navbar />\n        <Switch>\n            <Route path=\"/login\" component={Login} exact/>\n            <Route path=\"/\" component={Home} exact/>\n            <Route path=\"/cart\" component={Cart} exact/>\n            <Route path=\"/checkout\" component={Checkout}/>\n        </Switch>\n \n    </div>\n        )\n    }\n\nexport default App;\n","/*This reducer function manages the state of cart.\nAnd all actions for updating cart state to reducer are dispatched to this reducer. */\n\n\nimport { ADD_TO_CART, REMOVE_FROM_CART, REMOVE_WHOLE_ITEM,EMPTY_CART} from '../actions/types'\n\nconst initialstate=[]\n\n\n//retuns state with the new item added\nconst addItem=(cart,item)=>{\n    console.log('adding item..')\n    const temp=[...cart]\n    for(let i=0;i<cart.length;i++){\n        if(cart[i]._id===item._id){\n            //if that item exits increment its quantity by 1;\n            temp[i].quantity+=1;\n            console.log(cart)\n            return temp;\n        }\n    }\n    //if that item doesnt exits,set quantity to 1;\n    \n    return [...cart,{...item,quantity:1}];\n}\n\n\n//returns state with the given item deleted\nconst removeItem=(cart,item)=>{\n    return (cart.filter((cartItem)=>{\n        if(cartItem._id!==item._id) return true;\n        if(cartItem.quantity>1){\n            cartItem.quantity-=1;\n            return true;\n        }\n        return false;\n    }))\n    \n}\n\nconst deleteItem=(cart,item)=>{\n    return cart.filter((cartItem)=>(\n        cartItem._id!==item._id\n    )\n    )\n}\nconst  cartReducer=(state=initialstate,action)=>{\n    switch(action.type){\n        case ADD_TO_CART:\n            return addItem(state,action.payload);\n        case REMOVE_FROM_CART:\n            return removeItem(state,action.payload);\n        case REMOVE_WHOLE_ITEM:\n            return deleteItem(state,action.payload);\n        case EMPTY_CART:\n            console.log('here')\n            return action.payload\n        default:\n            return state;\n    }\n}\n\nexport default cartReducer\n","/*This reducer function manages the state of products on main page.\nAnd all actions for updating the  state to fetched products are dispatched to this reducer. */\n\nimport { FETCH_PRODUCTS } from '../actions/types'\n \nconst initialstate=[];\nconst  productsReducer=(state=initialstate,action)=>{\n    switch(action.type){\n        case FETCH_PRODUCTS:\n            console.log(action.payload)\n            return action.payload;\n        default:\n            return state;\n\n    }\n}\n\nexport default  productsReducer;","import {STORE_CRED} from '../actions/types'\n\nconst initialState={}\nconst credReducer=(state=initialState,action)=>{\n    switch(action.type){\n        case STORE_CRED:\n            console.log(action.payload)\n            return action.payload.data\n        default:\n            return state\n\n    }\n\n}\nexport default credReducer","//importing both reducers\nimport cartReducer from './cart'\nimport productsReducer from './products'\nimport credReducer from './cred'\nimport { combineReducers } from 'redux'\n\nconst  rootReducer=combineReducers(\n    {\n        cart:cartReducer,\n        products:productsReducer,\n        cred:credReducer\n        \n    }\n)\n\nexport default rootReducer","//importing rootreducer\nimport rootReducer from './reducers'\nimport thunk from 'redux-thunk'\n\n//importing from redux to create store\nimport {createStore, applyMiddleware, compose } from 'redux'\n\nconst middlewares=[thunk]\nconst initialState={};\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middlewares))\n  );\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router} from 'react-router-dom'\n\n//importing store\nimport store from './store'\n\n//react-redux to get Provider wrapper\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n          <App />   \n    </Router>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}